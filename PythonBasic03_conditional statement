논리형 자료형과 비교연산

1. 논리 자료형
참(True) 혹은 거짓(False)을 나타내는 자료형을 논리자료형이라고 한다.

1-1. 비교 연산자
     숫자나 문자의 값을 비교하는 연산자, 주어진 진술이 참이면 True, 거짓이면 False.
     print(3 < 5)    #True
     print(7 == 5)   #False
     print(2 >= 10)  #Flase
     print(5 != 10)  #True

비교 연사자의 종류!
==  :  같다
!=  :  다르다
>   :  왼쪽이 더 크다
<   :  오른쪽이 더 크다
>=  :  왼쪽이 같거나 크다
<=  :  오른쪽이 같거나 크다

# Q1. == 혹은 != 연산자을 이용해서 True인 명제를 ans1에 넣어봅시다.
ans1 = 3 == 3

# Q2. > 혹은 < 연산자를 이용해서 False인 명제를 ans2에 넣어봅시다.
ans2 = 13 < 11 

# Q3. >= 혹은 <= 연산자를 이용해서 True인 명제를 ans3에 넣어봅시다.
ans3 = 13 > 11

# 위의 세 변수를 출력해서 True, False 여부를 확인해봅시다.
print(ans1, ans2, ans3)

논리 연산자 활용하기
논리 자료형을 연산하는 방법엔 AND, OR, NOT 등이 있습니다.

a = True
b = False
c = 3>4
d = 2==2

print(a and c) # False
print(b or d) # True
print(not a) # False

1. AND - and
모든 논리가 True면 True, 아닐 시 False

2. OR - or
논리 중 True가 존재하면 True, 아닐 시 False

3. NOT - not
논리를 뒤집는 연산자
     
# 괄호 안에 적절한 명제를 채워 stat1이 True가 되게 해봅시다.
stat1 = 3==3 and 2<4 and (1<=1)

# 괄호 안에 적절한 명제를 채워 stat2이 False가 되게 해봅시다.
stat2 = 4>=6 or "apple"=="Apple" or (1!=1) 

# 괄호 안에 적절한 명제를 채워 stat3이 True가 되게 해봅시다.
stat3 = not (False)
print(stat1, stat2 ,stat3)

조건문
= 어떠한 특정 조건에 따라서 실행되는 명령이 달라지는 구문!

파이썬의 조건문 - if 문
= 만약 i == 1 이면, i를 출력하라!
     if 조건          명령
if문 조건이 True 일때            if string[0] == "a" : 
if 조건:                            count = count + 1
<수행할 명령>                       print(string)
<수행할 명령>                       
.....                             False일때 If문 실행 안됌

if문
if문에 들어갈 명령들은 같은 들여쓰기로 구분!
if string[0] == "a" : 
(들여쓰기)count = count + 1
(들여쓰기)print(string)

if - else문
조건이 True면 if문 False면 else문 실행
x = input()
if x in ['a','e','i', 'o', 'u']:
     print("모음입니다.")
else:
     print("자음입니다.")


만약 ~라면 if, 아니라면 else!
조건을 만족해주는 경우의 명령은 if문을 통해 전달해줄 수 있고
만족하지 못하는 경우에는 else문에 원하는 명령을 적어주면 됩니다.

if 조건:
    do A
else:
    do B

다음과 같은 상황일 때, 조건을 만족하면 A를, 그렇지 못하다면 B를 실행합니다.
이때, else는 if문에 해당하지 않는 경우를 의미하므로, 반드시 if문과 함께 쓰여야합니다!

# input()을 이용해서 숫자(정수) 입력을 받고, 변수 num에 이를 넣어봅시다.
num = int(input())

# if-else문을 이용해서 만약 입력받은 수가 홀수면 "(입력받은 수) 홀수입니다."
# 짝수면 "(입력받은 수) 짝수입니다."를 출력해봅시다.
# 괄호는 출력하지 않습니다.
if num % 2 == 0: 
    print(num, "짝수입니다.")
else:
    print(num, "홀수입니다.")
